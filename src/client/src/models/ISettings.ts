/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IBannerImg,
    IBannerImgFromJSON,
    IBannerImgFromJSONTyped,
    IBannerImgToJSON,
    ISeasonBanners,
    ISeasonBannersFromJSON,
    ISeasonBannersFromJSONTyped,
    ISeasonBannersToJSON,
} from './';

/**
 * 
 * @export
 * @interface ISettings
 */
export interface ISettings {
    /**
     * 
     * @type {number}
     * @memberof ISettings
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof ISettings
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ISettings
     */
    createdAt?: Date;
    /**
     * 
     * @type {Array<IBannerImg>}
     * @memberof ISettings
     */
    mainBanners: Array<IBannerImg>;
    /**
     * 
     * @type {ISeasonBanners}
     * @memberof ISettings
     */
    seasonBanners: ISeasonBanners;
    /**
     * 
     * @type {IBannerImg}
     * @memberof ISettings
     */
    bottomBanner: IBannerImg;
}

export function ISettingsFromJSON(json: any): ISettings {
    return ISettingsFromJSONTyped(json, false);
}

export function ISettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ISettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'mainBanners': ((json['mainBanners'] as Array<any>).map(IBannerImgFromJSON)),
        'seasonBanners': ISeasonBannersFromJSON(json['seasonBanners']),
        'bottomBanner': IBannerImgFromJSON(json['bottomBanner']),
    };
}

export function ISettingsToJSON(value?: ISettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'mainBanners': ((value.mainBanners as Array<any>).map(IBannerImgToJSON)),
        'seasonBanners': ISeasonBannersToJSON(value.seasonBanners),
        'bottomBanner': IBannerImgToJSON(value.bottomBanner),
    };
}


