/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TAXTYPE,
    TAXTYPEFromJSON,
    TAXTYPEFromJSONTyped,
    TAXTYPEToJSON,
} from './';

/**
 * 
 * @export
 * @interface ITaxonomy
 */
export interface ITaxonomy {
    /**
     * 
     * @type {number}
     * @memberof ITaxonomy
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof ITaxonomy
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ITaxonomy
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof ITaxonomy
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ITaxonomy
     */
    titleTh: string;
    /**
     * 
     * @type {TAXTYPE}
     * @memberof ITaxonomy
     */
    taxType: TAXTYPE;
    /**
     * 
     * @type {boolean}
     * @memberof ITaxonomy
     */
    isActive: boolean;
    /**
     * 
     * @type {any}
     * @memberof ITaxonomy
     */
    taxPrimaryImgId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ITaxonomy
     */
    taxThumbnailId?: any | null;
}

export function ITaxonomyFromJSON(json: any): ITaxonomy {
    return ITaxonomyFromJSONTyped(json, false);
}

export function ITaxonomyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ITaxonomy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'title': json['title'],
        'titleTh': json['title_th'],
        'taxType': TAXTYPEFromJSON(json['tax_type']),
        'isActive': json['isActive'],
        'taxPrimaryImgId': !exists(json, 'TaxPrimaryImgId') ? undefined : json['TaxPrimaryImgId'],
        'taxThumbnailId': !exists(json, 'TaxThumbnailId') ? undefined : json['TaxThumbnailId'],
    };
}

export function ITaxonomyToJSON(value?: ITaxonomy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'title': value.title,
        'title_th': value.titleTh,
        'tax_type': TAXTYPEToJSON(value.taxType),
        'isActive': value.isActive,
        'TaxPrimaryImgId': value.taxPrimaryImgId,
        'TaxThumbnailId': value.taxThumbnailId,
    };
}


