/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ISafeTaxonomy,
    ISafeTaxonomyFromJSON,
    ISafeTaxonomyFromJSONTyped,
    ISafeTaxonomyToJSON,
} from './';

/**
 * 
 * @export
 * @interface TaxonomyPayload
 */
export interface TaxonomyPayload {
    /**
     * 
     * @type {ISafeTaxonomy}
     * @memberof TaxonomyPayload
     */
    taxonomy?: ISafeTaxonomy;
    /**
     * 
     * @type {Array<ISafeTaxonomy>}
     * @memberof TaxonomyPayload
     */
    taxonomies?: Array<ISafeTaxonomy>;
    /**
     * 
     * @type {number}
     * @memberof TaxonomyPayload
     */
    listLength?: number;
}

export function TaxonomyPayloadFromJSON(json: any): TaxonomyPayload {
    return TaxonomyPayloadFromJSONTyped(json, false);
}

export function TaxonomyPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxonomyPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'taxonomy': !exists(json, 'taxonomy') ? undefined : ISafeTaxonomyFromJSON(json['taxonomy']),
        'taxonomies': !exists(json, 'taxonomies') ? undefined : ((json['taxonomies'] as Array<any>).map(ISafeTaxonomyFromJSON)),
        'listLength': !exists(json, 'listLength') ? undefined : json['listLength'],
    };
}

export function TaxonomyPayloadToJSON(value?: TaxonomyPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'taxonomy': ISafeTaxonomyToJSON(value.taxonomy),
        'taxonomies': value.taxonomies === undefined ? undefined : ((value.taxonomies as Array<any>).map(ISafeTaxonomyToJSON)),
        'listLength': value.listLength,
    };
}


