/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IOrder,
    IOrderFromJSON,
    IOrderFromJSONTyped,
    IOrderToJSON,
    ISafeUser,
    ISafeUserFromJSON,
    ISafeUserFromJSONTyped,
    ISafeUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface OrderPayload
 */
export interface OrderPayload {
    /**
     * 
     * @type {IOrder}
     * @memberof OrderPayload
     */
    order?: IOrder;
    /**
     * 
     * @type {Array<IOrder>}
     * @memberof OrderPayload
     */
    orders?: Array<IOrder>;
    /**
     * 
     * @type {number}
     * @memberof OrderPayload
     */
    listLength?: number;
    /**
     * 
     * @type {number}
     * @memberof OrderPayload
     */
    ordersSum?: number;
    /**
     * 
     * @type {object | ISafeUser}
     * @memberof OrderPayload
     */
    customer?: object | ISafeUser;
    /**
     * 
     * @type {string}
     * @memberof OrderPayload
     */
    invoiceId?: string;
}

export function OrderPayloadFromJSON(json: any): OrderPayload {
    return OrderPayloadFromJSONTyped(json, false);
}

export function OrderPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'order': !exists(json, 'order') ? undefined : IOrderFromJSON(json['order']),
        'orders': !exists(json, 'orders') ? undefined : ((json['orders'] as Array<any>).map(IOrderFromJSON)),
        'listLength': !exists(json, 'listLength') ? undefined : json['listLength'],
        'ordersSum': !exists(json, 'ordersSum') ? undefined : json['ordersSum'],
        'customer': !exists(json, 'customer') ? undefined : object | ISafeUserFromJSON(json['customer']),
        'invoiceId': !exists(json, 'invoiceId') ? undefined : json['invoiceId'],
    };
}

export function OrderPayloadToJSON(value?: OrderPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'order': IOrderToJSON(value.order),
        'orders': value.orders === undefined ? undefined : ((value.orders as Array<any>).map(IOrderToJSON)),
        'listLength': value.listLength,
        'ordersSum': value.ordersSum,
        'customer': object | ISafeUserToJSON(value.customer),
        'invoiceId': value.invoiceId,
    };
}


