/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AMOUNTTYPE,
    AMOUNTTYPEFromJSON,
    AMOUNTTYPEFromJSONTyped,
    AMOUNTTYPEToJSON,
    PROMOTYPE,
    PROMOTYPEFromJSON,
    PROMOTYPEFromJSONTyped,
    PROMOTYPEToJSON,
} from './';

/**
 * 
 * @export
 * @interface DiscountFields
 */
export interface DiscountFields {
    /**
     * 
     * @type {number}
     * @memberof DiscountFields
     */
    percent?: number;
    /**
     * 
     * @type {number}
     * @memberof DiscountFields
     */
    total?: number;
    /**
     * 
     * @type {PROMOTYPE}
     * @memberof DiscountFields
     */
    promotionType?: PROMOTYPE;
    /**
     * 
     * @type {AMOUNTTYPE}
     * @memberof DiscountFields
     */
    amtType?: AMOUNTTYPE;
    /**
     * 
     * @type {number}
     * @memberof DiscountFields
     */
    productId?: number;
}

export function DiscountFieldsFromJSON(json: any): DiscountFields {
    return DiscountFieldsFromJSONTyped(json, false);
}

export function DiscountFieldsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscountFields {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'percent': !exists(json, 'percent') ? undefined : json['percent'],
        'total': !exists(json, 'total') ? undefined : json['total'],
        'promotionType': !exists(json, 'promotion_type') ? undefined : PROMOTYPEFromJSON(json['promotion_type']),
        'amtType': !exists(json, 'amt_type') ? undefined : AMOUNTTYPEFromJSON(json['amt_type']),
        'productId': !exists(json, 'productId') ? undefined : json['productId'],
    };
}

export function DiscountFieldsToJSON(value?: DiscountFields | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'percent': value.percent,
        'total': value.total,
        'promotion_type': PROMOTYPEToJSON(value.promotionType),
        'amt_type': AMOUNTTYPEToJSON(value.amtType),
        'productId': value.productId,
    };
}


