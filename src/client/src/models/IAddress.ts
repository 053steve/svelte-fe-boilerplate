/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ADDRESSLANG,
    ADDRESSLANGFromJSON,
    ADDRESSLANGFromJSONTyped,
    ADDRESSLANGToJSON,
} from './';

/**
 * 
 * @export
 * @interface IAddress
 */
export interface IAddress {
    /**
     * 
     * @type {number}
     * @memberof IAddress
     */
    id?: number;
    /**
     * 
     * @type {ADDRESSLANG}
     * @memberof IAddress
     */
    addressLang?: ADDRESSLANG;
    /**
     * 
     * @type {string}
     * @memberof IAddress
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof IAddress
     */
    address2?: string;
    /**
     * 
     * @type {string}
     * @memberof IAddress
     */
    province: string;
    /**
     * 
     * @type {string}
     * @memberof IAddress
     */
    zipcode?: string;
    /**
     * 
     * @type {string}
     * @memberof IAddress
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof IAddress
     */
    addressFull?: string;
    /**
     * 
     * @type {boolean}
     * @memberof IAddress
     */
    isPrimaryAddress?: boolean;
}

export function IAddressFromJSON(json: any): IAddress {
    return IAddressFromJSONTyped(json, false);
}

export function IAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): IAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'addressLang': !exists(json, 'addressLang') ? undefined : ADDRESSLANGFromJSON(json['addressLang']),
        'address': !exists(json, 'address') ? undefined : json['address'],
        'address2': !exists(json, 'address2') ? undefined : json['address2'],
        'province': json['province'],
        'zipcode': !exists(json, 'zipcode') ? undefined : json['zipcode'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'addressFull': !exists(json, 'addressFull') ? undefined : json['addressFull'],
        'isPrimaryAddress': !exists(json, 'isPrimaryAddress') ? undefined : json['isPrimaryAddress'],
    };
}

export function IAddressToJSON(value?: IAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'addressLang': ADDRESSLANGToJSON(value.addressLang),
        'address': value.address,
        'address2': value.address2,
        'province': value.province,
        'zipcode': value.zipcode,
        'country': value.country,
        'addressFull': value.addressFull,
        'isPrimaryAddress': value.isPrimaryAddress,
    };
}


