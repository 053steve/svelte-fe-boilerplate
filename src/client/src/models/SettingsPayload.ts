/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IBannerImg,
    IBannerImgFromJSON,
    IBannerImgFromJSONTyped,
    IBannerImgToJSON,
    ISeasonBanners,
    ISeasonBannersFromJSON,
    ISeasonBannersFromJSONTyped,
    ISeasonBannersToJSON,
    ISettings,
    ISettingsFromJSON,
    ISettingsFromJSONTyped,
    ISettingsToJSON,
    ISocialRefs,
    ISocialRefsFromJSON,
    ISocialRefsFromJSONTyped,
    ISocialRefsToJSON,
} from './';

/**
 * 
 * @export
 * @interface SettingsPayload
 */
export interface SettingsPayload {
    /**
     * 
     * @type {Array<IBannerImg>}
     * @memberof SettingsPayload
     */
    mainBanners?: Array<IBannerImg>;
    /**
     * 
     * @type {ISeasonBanners}
     * @memberof SettingsPayload
     */
    seasonBanners?: ISeasonBanners;
    /**
     * 
     * @type {IBannerImg}
     * @memberof SettingsPayload
     */
    bottomBanner?: IBannerImg;
    /**
     * 
     * @type {ISocialRefs}
     * @memberof SettingsPayload
     */
    socialRefs?: ISocialRefs;
    /**
     * 
     * @type {ISettings}
     * @memberof SettingsPayload
     */
    settings?: ISettings;
    /**
     * 
     * @type {number}
     * @memberof SettingsPayload
     */
    listLength?: number;
}

export function SettingsPayloadFromJSON(json: any): SettingsPayload {
    return SettingsPayloadFromJSONTyped(json, false);
}

export function SettingsPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): SettingsPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mainBanners': !exists(json, 'mainBanners') ? undefined : ((json['mainBanners'] as Array<any>).map(IBannerImgFromJSON)),
        'seasonBanners': !exists(json, 'seasonBanners') ? undefined : ISeasonBannersFromJSON(json['seasonBanners']),
        'bottomBanner': !exists(json, 'bottomBanner') ? undefined : IBannerImgFromJSON(json['bottomBanner']),
        'socialRefs': !exists(json, 'socialRefs') ? undefined : ISocialRefsFromJSON(json['socialRefs']),
        'settings': !exists(json, 'settings') ? undefined : ISettingsFromJSON(json['settings']),
        'listLength': !exists(json, 'listLength') ? undefined : json['listLength'],
    };
}

export function SettingsPayloadToJSON(value?: SettingsPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mainBanners': value.mainBanners === undefined ? undefined : ((value.mainBanners as Array<any>).map(IBannerImgToJSON)),
        'seasonBanners': ISeasonBannersToJSON(value.seasonBanners),
        'bottomBanner': IBannerImgToJSON(value.bottomBanner),
        'socialRefs': ISocialRefsToJSON(value.socialRefs),
        'settings': ISettingsToJSON(value.settings),
        'listLength': value.listLength,
    };
}


