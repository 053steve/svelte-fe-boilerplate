/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ColorReq,
    ColorReqFromJSON,
    ColorReqFromJSONTyped,
    ColorReqToJSON,
    IProductImg,
    IProductImgFromJSON,
    IProductImgFromJSONTyped,
    IProductImgToJSON,
    NullableIModelSizeImg,
    NullableIModelSizeImgFromJSON,
    NullableIModelSizeImgFromJSONTyped,
    NullableIModelSizeImgToJSON,
    NullableISizeChartImg,
    NullableISizeChartImgFromJSON,
    NullableISizeChartImgFromJSONTyped,
    NullableISizeChartImgToJSON,
    PRODUCTSTATUS,
    PRODUCTSTATUSFromJSON,
    PRODUCTSTATUSFromJSONTyped,
    PRODUCTSTATUSToJSON,
    PRODUCTTYPE,
    PRODUCTTYPEFromJSON,
    PRODUCTTYPEFromJSONTyped,
    PRODUCTTYPEToJSON,
    RelatedProductReq,
    RelatedProductReqFromJSON,
    RelatedProductReqFromJSONTyped,
    RelatedProductReqToJSON,
    StockReq,
    StockReqFromJSON,
    StockReqFromJSONTyped,
    StockReqToJSON,
    TaxonomyReq,
    TaxonomyReqFromJSON,
    TaxonomyReqFromJSONTyped,
    TaxonomyReqToJSON,
} from './';

/**
 * 
 * @export
 * @interface ProductReq
 */
export interface ProductReq {
    /**
     * 
     * @type {string}
     * @memberof ProductReq
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductReq
     */
    sku?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ProductReq
     */
    price?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ProductReq
     */
    details?: string | null;
    /**
     * 
     * @type {PRODUCTTYPE}
     * @memberof ProductReq
     */
    productType?: PRODUCTTYPE;
    /**
     * 
     * @type {PRODUCTSTATUS}
     * @memberof ProductReq
     */
    productStatus?: PRODUCTSTATUS;
    /**
     * 
     * @type {Array<IProductImg>}
     * @memberof ProductReq
     */
    productImgs?: Array<IProductImg> | null;
    /**
     * 
     * @type {Array<ColorReq>}
     * @memberof ProductReq
     */
    colors?: Array<ColorReq> | null;
    /**
     * 
     * @type {Array<RelatedProductReq>}
     * @memberof ProductReq
     */
    relatedColors?: Array<RelatedProductReq> | null;
    /**
     * 
     * @type {Array<TaxonomyReq>}
     * @memberof ProductReq
     */
    tags?: Array<TaxonomyReq> | null;
    /**
     * 
     * @type {Array<TaxonomyReq>}
     * @memberof ProductReq
     */
    categories?: Array<TaxonomyReq> | null;
    /**
     * 
     * @type {Array<TaxonomyReq>}
     * @memberof ProductReq
     */
    collections?: Array<TaxonomyReq> | null;
    /**
     * 
     * @type {Array<TaxonomyReq>}
     * @memberof ProductReq
     */
    brands?: Array<TaxonomyReq> | null;
    /**
     * 
     * @type {Array<RelatedProductReq>}
     * @memberof ProductReq
     */
    relatedProducts?: Array<RelatedProductReq> | null;
    /**
     * 
     * @type {Array<StockReq>}
     * @memberof ProductReq
     */
    stocks?: Array<StockReq> | null;
    /**
     * 
     * @type {string}
     * @memberof ProductReq
     */
    sizeChartText?: string | null;
    /**
     * 
     * @type {NullableISizeChartImg}
     * @memberof ProductReq
     */
    sizeChartImg?: NullableISizeChartImg | null;
    /**
     * 
     * @type {NullableIModelSizeImg}
     * @memberof ProductReq
     */
    modelSizeImg?: NullableIModelSizeImg | null;
    /**
     * 
     * @type {string}
     * @memberof ProductReq
     */
    modelSizeText?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ProductReq
     */
    userId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ProductReq
     */
    careInstruction?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductReq
     */
    publishDate?: string | null;
}

export function ProductReqFromJSON(json: any): ProductReq {
    return ProductReqFromJSONTyped(json, false);
}

export function ProductReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductReq {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'details': !exists(json, 'details') ? undefined : json['details'],
        'productType': !exists(json, 'product_type') ? undefined : PRODUCTTYPEFromJSON(json['product_type']),
        'productStatus': !exists(json, 'product_status') ? undefined : PRODUCTSTATUSFromJSON(json['product_status']),
        'productImgs': !exists(json, 'productImgs') ? undefined : (json['productImgs'] === null ? null : (json['productImgs'] as Array<any>).map(IProductImgFromJSON)),
        'colors': !exists(json, 'colors') ? undefined : (json['colors'] === null ? null : (json['colors'] as Array<any>).map(ColorReqFromJSON)),
        'relatedColors': !exists(json, 'relatedColors') ? undefined : (json['relatedColors'] === null ? null : (json['relatedColors'] as Array<any>).map(RelatedProductReqFromJSON)),
        'tags': !exists(json, 'tags') ? undefined : (json['tags'] === null ? null : (json['tags'] as Array<any>).map(TaxonomyReqFromJSON)),
        'categories': !exists(json, 'categories') ? undefined : (json['categories'] === null ? null : (json['categories'] as Array<any>).map(TaxonomyReqFromJSON)),
        'collections': !exists(json, 'collections') ? undefined : (json['collections'] === null ? null : (json['collections'] as Array<any>).map(TaxonomyReqFromJSON)),
        'brands': !exists(json, 'brands') ? undefined : (json['brands'] === null ? null : (json['brands'] as Array<any>).map(TaxonomyReqFromJSON)),
        'relatedProducts': !exists(json, 'relatedProducts') ? undefined : (json['relatedProducts'] === null ? null : (json['relatedProducts'] as Array<any>).map(RelatedProductReqFromJSON)),
        'stocks': !exists(json, 'stocks') ? undefined : (json['stocks'] === null ? null : (json['stocks'] as Array<any>).map(StockReqFromJSON)),
        'sizeChartText': !exists(json, 'sizeChartText') ? undefined : json['sizeChartText'],
        'sizeChartImg': !exists(json, 'sizeChartImg') ? undefined : NullableISizeChartImgFromJSON(json['sizeChartImg']),
        'modelSizeImg': !exists(json, 'modelSizeImg') ? undefined : NullableIModelSizeImgFromJSON(json['modelSizeImg']),
        'modelSizeText': !exists(json, 'modelSizeText') ? undefined : json['modelSizeText'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'careInstruction': !exists(json, 'careInstruction') ? undefined : json['careInstruction'],
        'publishDate': !exists(json, 'publishDate') ? undefined : json['publishDate'],
    };
}

export function ProductReqToJSON(value?: ProductReq | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'sku': value.sku,
        'price': value.price,
        'details': value.details,
        'product_type': PRODUCTTYPEToJSON(value.productType),
        'product_status': PRODUCTSTATUSToJSON(value.productStatus),
        'productImgs': value.productImgs === undefined ? undefined : (value.productImgs === null ? null : (value.productImgs as Array<any>).map(IProductImgToJSON)),
        'colors': value.colors === undefined ? undefined : (value.colors === null ? null : (value.colors as Array<any>).map(ColorReqToJSON)),
        'relatedColors': value.relatedColors === undefined ? undefined : (value.relatedColors === null ? null : (value.relatedColors as Array<any>).map(RelatedProductReqToJSON)),
        'tags': value.tags === undefined ? undefined : (value.tags === null ? null : (value.tags as Array<any>).map(TaxonomyReqToJSON)),
        'categories': value.categories === undefined ? undefined : (value.categories === null ? null : (value.categories as Array<any>).map(TaxonomyReqToJSON)),
        'collections': value.collections === undefined ? undefined : (value.collections === null ? null : (value.collections as Array<any>).map(TaxonomyReqToJSON)),
        'brands': value.brands === undefined ? undefined : (value.brands === null ? null : (value.brands as Array<any>).map(TaxonomyReqToJSON)),
        'relatedProducts': value.relatedProducts === undefined ? undefined : (value.relatedProducts === null ? null : (value.relatedProducts as Array<any>).map(RelatedProductReqToJSON)),
        'stocks': value.stocks === undefined ? undefined : (value.stocks === null ? null : (value.stocks as Array<any>).map(StockReqToJSON)),
        'sizeChartText': value.sizeChartText,
        'sizeChartImg': NullableISizeChartImgToJSON(value.sizeChartImg),
        'modelSizeImg': NullableIModelSizeImgToJSON(value.modelSizeImg),
        'modelSizeText': value.modelSizeText,
        'userId': value.userId,
        'careInstruction': value.careInstruction,
        'publishDate': value.publishDate,
    };
}


