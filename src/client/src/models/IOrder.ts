/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DiscountItemObj,
    DiscountItemObjFromJSON,
    DiscountItemObjFromJSONTyped,
    DiscountItemObjToJSON,
    IAdditionalInfo,
    IAdditionalInfoFromJSON,
    IAdditionalInfoFromJSONTyped,
    IAdditionalInfoToJSON,
    IAddress,
    IAddressFromJSON,
    IAddressFromJSONTyped,
    IAddressToJSON,
    IPromotion,
    IPromotionFromJSON,
    IPromotionFromJSONTyped,
    IPromotionToJSON,
    IShippingManual,
    IShippingManualFromJSON,
    IShippingManualFromJSONTyped,
    IShippingManualToJSON,
    ORDERSOURCE,
    ORDERSOURCEFromJSON,
    ORDERSOURCEFromJSONTyped,
    ORDERSOURCEToJSON,
    ORDERSTATUS,
    ORDERSTATUSFromJSON,
    ORDERSTATUSFromJSONTyped,
    ORDERSTATUSToJSON,
    OrderDelivery,
    OrderDeliveryFromJSON,
    OrderDeliveryFromJSONTyped,
    OrderDeliveryToJSON,
    OrderProducts,
    OrderProductsFromJSON,
    OrderProductsFromJSONTyped,
    OrderProductsToJSON,
    OrderRefs,
    OrderRefsFromJSON,
    OrderRefsFromJSONTyped,
    OrderRefsToJSON,
    PAYMENTSTATUS,
    PAYMENTSTATUSFromJSON,
    PAYMENTSTATUSFromJSONTyped,
    PAYMENTSTATUSToJSON,
    PAYMENTTYPE,
    PAYMENTTYPEFromJSON,
    PAYMENTTYPEFromJSONTyped,
    PAYMENTTYPEToJSON,
    PaymentDetails,
    PaymentDetailsFromJSON,
    PaymentDetailsFromJSONTyped,
    PaymentDetailsToJSON,
} from './';

/**
 * 
 * @export
 * @interface IOrder
 */
export interface IOrder {
    [key: string]: any | any;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof IOrder
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof IOrder
     */
    createdAt?: Date;
    /**
     * 
     * @type {Array<OrderProducts>}
     * @memberof IOrder
     */
    orderProducts: Array<OrderProducts>;
    /**
     * 
     * @type {string}
     * @memberof IOrder
     */
    invoiceId: string;
    /**
     * 
     * @type {string}
     * @memberof IOrder
     */
    trackingNo?: string;
    /**
     * 
     * @type {Date}
     * @memberof IOrder
     */
    trackingDate?: Date;
    /**
     * 
     * @type {PAYMENTSTATUS}
     * @memberof IOrder
     */
    paymentStatus?: PAYMENTSTATUS;
    /**
     * 
     * @type {ORDERSTATUS}
     * @memberof IOrder
     */
    orderStatus: ORDERSTATUS;
    /**
     * 
     * @type {OrderDelivery}
     * @memberof IOrder
     */
    delivery: OrderDelivery;
    /**
     * 
     * @type {string}
     * @memberof IOrder
     */
    specialRequest?: string;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    pointsEarned?: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    deliveryTotal: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    subTotal: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    discountTotal: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    priceBeforeVat: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    taxTotal: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    creditTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    total: number;
    /**
     * 
     * @type {PAYMENTTYPE}
     * @memberof IOrder
     */
    paymentType: PAYMENTTYPE;
    /**
     * 
     * @type {boolean}
     * @memberof IOrder
     */
    isReqTax?: boolean;
    /**
     * 
     * @type {string}
     * @memberof IOrder
     */
    taxId?: string;
    /**
     * 
     * @type {ORDERSOURCE}
     * @memberof IOrder
     */
    orderSource: ORDERSOURCE;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    promotionId?: number;
    /**
     * 
     * @type {IPromotion}
     * @memberof IOrder
     */
    promotion?: IPromotion;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    customerId?: number;
    /**
     * 
     * @type {object}
     * @memberof IOrder
     */
    customer?: object;
    /**
     * 
     * @type {IAddress}
     * @memberof IOrder
     */
    address?: IAddress;
    /**
     * 
     * @type {IAddress}
     * @memberof IOrder
     */
    taxAddress?: IAddress;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    addressId: number;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    taxAddressId?: number;
    /**
     * 
     * @type {IAdditionalInfo}
     * @memberof IOrder
     */
    additionalInfo?: IAdditionalInfo;
    /**
     * 
     * @type {string}
     * @memberof IOrder
     */
    cancelReason?: string;
    /**
     * 
     * @type {OrderRefs}
     * @memberof IOrder
     */
    refs?: OrderRefs;
    /**
     * 
     * @type {DiscountItemObj}
     * @memberof IOrder
     */
    discountPerOrder?: DiscountItemObj;
    /**
     * 
     * @type {Date}
     * @memberof IOrder
     */
    confirmDate?: Date;
    /**
     * 
     * @type {Array<PaymentDetails>}
     * @memberof IOrder
     */
    payment?: Array<PaymentDetails>;
    /**
     * 
     * @type {object}
     * @memberof IOrder
     */
    admin?: object;
    /**
     * 
     * @type {number}
     * @memberof IOrder
     */
    adminId?: number;
    /**
     * 
     * @type {string}
     * @memberof IOrder
     */
    remarks?: string;
    /**
     * 
     * @type {IShippingManual}
     * @memberof IOrder
     */
    shippingManual: IShippingManual;
}

export function IOrderFromJSON(json: any): IOrder {
    return IOrderFromJSONTyped(json, false);
}

export function IOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): IOrder {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
            ...json,
        'id': !exists(json, 'id') ? undefined : json['id'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'orderProducts': ((json['orderProducts'] as Array<any>).map(OrderProductsFromJSON)),
        'invoiceId': json['invoiceId'],
        'trackingNo': !exists(json, 'trackingNo') ? undefined : json['trackingNo'],
        'trackingDate': !exists(json, 'trackingDate') ? undefined : (new Date(json['trackingDate'])),
        'paymentStatus': !exists(json, 'paymentStatus') ? undefined : PAYMENTSTATUSFromJSON(json['paymentStatus']),
        'orderStatus': ORDERSTATUSFromJSON(json['orderStatus']),
        'delivery': OrderDeliveryFromJSON(json['delivery']),
        'specialRequest': !exists(json, 'specialRequest') ? undefined : json['specialRequest'],
        'pointsEarned': !exists(json, 'pointsEarned') ? undefined : json['pointsEarned'],
        'deliveryTotal': json['deliveryTotal'],
        'subTotal': json['subTotal'],
        'discountTotal': json['discountTotal'],
        'priceBeforeVat': json['priceBeforeVat'],
        'taxTotal': json['taxTotal'],
        'creditTotal': !exists(json, 'creditTotal') ? undefined : json['creditTotal'],
        'total': json['total'],
        'paymentType': PAYMENTTYPEFromJSON(json['paymentType']),
        'isReqTax': !exists(json, 'isReqTax') ? undefined : json['isReqTax'],
        'taxId': !exists(json, 'taxId') ? undefined : json['taxId'],
        'orderSource': ORDERSOURCEFromJSON(json['orderSource']),
        'promotionId': !exists(json, 'PromotionId') ? undefined : json['PromotionId'],
        'promotion': !exists(json, 'promotion') ? undefined : IPromotionFromJSON(json['promotion']),
        'customerId': !exists(json, 'CustomerId') ? undefined : json['CustomerId'],
        'customer': !exists(json, 'customer') ? undefined : json['customer'],
        'address': !exists(json, 'address') ? undefined : IAddressFromJSON(json['address']),
        'taxAddress': !exists(json, 'taxAddress') ? undefined : IAddressFromJSON(json['taxAddress']),
        'addressId': json['AddressId'],
        'taxAddressId': !exists(json, 'TaxAddressId') ? undefined : json['TaxAddressId'],
        'additionalInfo': !exists(json, 'additionalInfo') ? undefined : IAdditionalInfoFromJSON(json['additionalInfo']),
        'cancelReason': !exists(json, 'cancelReason') ? undefined : json['cancelReason'],
        'refs': !exists(json, 'refs') ? undefined : OrderRefsFromJSON(json['refs']),
        'discountPerOrder': !exists(json, 'discountPerOrder') ? undefined : DiscountItemObjFromJSON(json['discountPerOrder']),
        'confirmDate': !exists(json, 'confirmDate') ? undefined : (new Date(json['confirmDate'])),
        'payment': !exists(json, 'payment') ? undefined : ((json['payment'] as Array<any>).map(PaymentDetailsFromJSON)),
        'admin': !exists(json, 'admin') ? undefined : json['admin'],
        'adminId': !exists(json, 'AdminId') ? undefined : json['AdminId'],
        'remarks': !exists(json, 'remarks') ? undefined : json['remarks'],
        'shippingManual': IShippingManualFromJSON(json['shippingManual']),
    };
}

export function IOrderToJSON(value?: IOrder | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
            ...value,
        'id': value.id,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'orderProducts': ((value.orderProducts as Array<any>).map(OrderProductsToJSON)),
        'invoiceId': value.invoiceId,
        'trackingNo': value.trackingNo,
        'trackingDate': value.trackingDate === undefined ? undefined : (value.trackingDate.toISOString()),
        'paymentStatus': PAYMENTSTATUSToJSON(value.paymentStatus),
        'orderStatus': ORDERSTATUSToJSON(value.orderStatus),
        'delivery': OrderDeliveryToJSON(value.delivery),
        'specialRequest': value.specialRequest,
        'pointsEarned': value.pointsEarned,
        'deliveryTotal': value.deliveryTotal,
        'subTotal': value.subTotal,
        'discountTotal': value.discountTotal,
        'priceBeforeVat': value.priceBeforeVat,
        'taxTotal': value.taxTotal,
        'creditTotal': value.creditTotal,
        'total': value.total,
        'paymentType': PAYMENTTYPEToJSON(value.paymentType),
        'isReqTax': value.isReqTax,
        'taxId': value.taxId,
        'orderSource': ORDERSOURCEToJSON(value.orderSource),
        'PromotionId': value.promotionId,
        'promotion': IPromotionToJSON(value.promotion),
        'CustomerId': value.customerId,
        'customer': value.customer,
        'address': IAddressToJSON(value.address),
        'taxAddress': IAddressToJSON(value.taxAddress),
        'AddressId': value.addressId,
        'TaxAddressId': value.taxAddressId,
        'additionalInfo': IAdditionalInfoToJSON(value.additionalInfo),
        'cancelReason': value.cancelReason,
        'refs': OrderRefsToJSON(value.refs),
        'discountPerOrder': DiscountItemObjToJSON(value.discountPerOrder),
        'confirmDate': value.confirmDate === undefined ? undefined : (value.confirmDate.toISOString()),
        'payment': value.payment === undefined ? undefined : ((value.payment as Array<any>).map(PaymentDetailsToJSON)),
        'admin': value.admin,
        'AdminId': value.adminId,
        'remarks': value.remarks,
        'shippingManual': IShippingManualToJSON(value.shippingManual),
    };
}


