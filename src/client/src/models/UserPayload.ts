/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IAddress,
    IAddressFromJSON,
    IAddressFromJSONTyped,
    IAddressToJSON,
    ISafeUser,
    ISafeUserFromJSON,
    ISafeUserFromJSONTyped,
    ISafeUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserPayload
 */
export interface UserPayload {
    /**
     * 
     * @type {ISafeUser}
     * @memberof UserPayload
     */
    user?: ISafeUser;
    /**
     * 
     * @type {Array<ISafeUser>}
     * @memberof UserPayload
     */
    users?: Array<ISafeUser>;
    /**
     * 
     * @type {Array<IAddress>}
     * @memberof UserPayload
     */
    addresses?: Array<IAddress>;
    /**
     * 
     * @type {IAddress}
     * @memberof UserPayload
     */
    address?: IAddress;
    /**
     * 
     * @type {number}
     * @memberof UserPayload
     */
    userLength?: number;
    /**
     * 
     * @type {string}
     * @memberof UserPayload
     */
    token?: string;
}

export function UserPayloadFromJSON(json: any): UserPayload {
    return UserPayloadFromJSONTyped(json, false);
}

export function UserPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': !exists(json, 'user') ? undefined : ISafeUserFromJSON(json['user']),
        'users': !exists(json, 'users') ? undefined : ((json['users'] as Array<any>).map(ISafeUserFromJSON)),
        'addresses': !exists(json, 'addresses') ? undefined : ((json['addresses'] as Array<any>).map(IAddressFromJSON)),
        'address': !exists(json, 'address') ? undefined : IAddressFromJSON(json['address']),
        'userLength': !exists(json, 'userLength') ? undefined : json['userLength'],
        'token': !exists(json, 'token') ? undefined : json['token'],
    };
}

export function UserPayloadToJSON(value?: UserPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': ISafeUserToJSON(value.user),
        'users': value.users === undefined ? undefined : ((value.users as Array<any>).map(ISafeUserToJSON)),
        'addresses': value.addresses === undefined ? undefined : ((value.addresses as Array<any>).map(IAddressToJSON)),
        'address': IAddressToJSON(value.address),
        'userLength': value.userLength,
        'token': value.token,
    };
}


