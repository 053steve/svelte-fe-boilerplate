/* tslint:disable */
/* eslint-disable */
/**
 * only-bu-BE
 * BE
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CONTENTTYPE,
    CONTENTTYPEFromJSON,
    CONTENTTYPEFromJSONTyped,
    CONTENTTYPEToJSON,
} from './';

/**
 * 
 * @export
 * @interface IContent
 */
export interface IContent {
    /**
     * 
     * @type {number}
     * @memberof IContent
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof IContent
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof IContent
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof IContent
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof IContent
     */
    body?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IContent
     */
    url?: string | null;
    /**
     * 
     * @type {number}
     * @memberof IContent
     */
    orderNo?: number | null;
    /**
     * 
     * @type {CONTENTTYPE}
     * @memberof IContent
     */
    contentType: CONTENTTYPE;
}

export function IContentFromJSON(json: any): IContent {
    return IContentFromJSONTyped(json, false);
}

export function IContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): IContent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'title': json['title'],
        'body': !exists(json, 'body') ? undefined : json['body'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'orderNo': !exists(json, 'orderNo') ? undefined : json['orderNo'],
        'contentType': CONTENTTYPEFromJSON(json['content_type']),
    };
}

export function IContentToJSON(value?: IContent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'title': value.title,
        'body': value.body,
        'url': value.url,
        'orderNo': value.orderNo,
        'content_type': CONTENTTYPEToJSON(value.contentType),
    };
}


